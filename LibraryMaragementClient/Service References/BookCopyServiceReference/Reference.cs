//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryMaragementClient.BookCopyServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookCopyServiceReference.IBookCopyService")]
    public interface IBookCopyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/Add", ReplyAction="http://tempuri.org/IBookCopyService/AddResponse")]
        int Add(DatabaseAccess.DataTransferObjects.Copy copy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/Add", ReplyAction="http://tempuri.org/IBookCopyService/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(DatabaseAccess.DataTransferObjects.Copy copy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/Delete", ReplyAction="http://tempuri.org/IBookCopyService/DeleteResponse")]
        int Delete(int copyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/Delete", ReplyAction="http://tempuri.org/IBookCopyService/DeleteResponse")]
        System.Threading.Tasks.Task<int> DeleteAsync(int copyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/GetAll", ReplyAction="http://tempuri.org/IBookCopyService/GetAllResponse")]
        System.Data.DataTable GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/GetAll", ReplyAction="http://tempuri.org/IBookCopyService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/Update", ReplyAction="http://tempuri.org/IBookCopyService/UpdateResponse")]
        int Update(DatabaseAccess.DataTransferObjects.Copy copy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/Update", ReplyAction="http://tempuri.org/IBookCopyService/UpdateResponse")]
        System.Threading.Tasks.Task<int> UpdateAsync(DatabaseAccess.DataTransferObjects.Copy copy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/CheckValidCopyId", ReplyAction="http://tempuri.org/IBookCopyService/CheckValidCopyIdResponse")]
        bool CheckValidCopyId(int copyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/CheckValidCopyId", ReplyAction="http://tempuri.org/IBookCopyService/CheckValidCopyIdResponse")]
        System.Threading.Tasks.Task<bool> CheckValidCopyIdAsync(int copyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/GetCopies", ReplyAction="http://tempuri.org/IBookCopyService/GetCopiesResponse")]
        System.Collections.Generic.List<DatabaseAccess.DataTransferObjects.Copy> GetCopies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookCopyService/GetCopies", ReplyAction="http://tempuri.org/IBookCopyService/GetCopiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DatabaseAccess.DataTransferObjects.Copy>> GetCopiesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookCopyServiceChannel : LibraryMaragementClient.BookCopyServiceReference.IBookCopyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookCopyServiceClient : System.ServiceModel.ClientBase<LibraryMaragementClient.BookCopyServiceReference.IBookCopyService>, LibraryMaragementClient.BookCopyServiceReference.IBookCopyService {
        
        public BookCopyServiceClient() {
        }
        
        public BookCopyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookCopyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookCopyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookCopyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(DatabaseAccess.DataTransferObjects.Copy copy) {
            return base.Channel.Add(copy);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(DatabaseAccess.DataTransferObjects.Copy copy) {
            return base.Channel.AddAsync(copy);
        }
        
        public int Delete(int copyCode) {
            return base.Channel.Delete(copyCode);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAsync(int copyCode) {
            return base.Channel.DeleteAsync(copyCode);
        }
        
        public System.Data.DataTable GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public int Update(DatabaseAccess.DataTransferObjects.Copy copy) {
            return base.Channel.Update(copy);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAsync(DatabaseAccess.DataTransferObjects.Copy copy) {
            return base.Channel.UpdateAsync(copy);
        }
        
        public bool CheckValidCopyId(int copyId) {
            return base.Channel.CheckValidCopyId(copyId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckValidCopyIdAsync(int copyId) {
            return base.Channel.CheckValidCopyIdAsync(copyId);
        }
        
        public System.Collections.Generic.List<DatabaseAccess.DataTransferObjects.Copy> GetCopies() {
            return base.Channel.GetCopies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DatabaseAccess.DataTransferObjects.Copy>> GetCopiesAsync() {
            return base.Channel.GetCopiesAsync();
        }
    }
}
